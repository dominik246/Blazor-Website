@page "/algorithms"

@inject ICreateGraphHelper _createGraph;
@inject IJSRuntime JSRuntime;

<title>@Title</title>

<div>
    <div class="taskbar_div">
        <div>
            <button onclick="DropDownMenuFunc()" class="base algorithm">Algorithms</button>
            <div id="myDropdown" class="dropdown-content">
                @foreach (string s in AlgorithmList)
                {
                    <a href="algorithms#@(s.ToSafeUrl())">@s</a>
                }
            </div>
        </div>

        <button @onclick="Visualize()" class="base visualize">Visualize!</button>

        <a class="base home" href="/">Home</a>

    </div>

    <div class="grid_div">

        @for (int i = 0; i < 49; i++)
        {
            <div class="container_div">
                @for (int j = 0; j < 25; j++)
                {
                    //TODO: to read https://www.html5rocks.com/en/tutorials/dnd/basics/
                    <div class="grid_unit">
                    </div>
                }
            </div>
        }


    </div>
</div>


@code {
    public string Title { get; set; } = "Shortest Path";

    public List<string> AlgorithmList { get; set; } = new List<string>()
{
        "Dijkstra's Algorithm",
        "A* Algorithm",
        "Something Something",
        "Algorithm Algorithm"
    };

    public Vector2 Coord { get; set; } = new Vector2(3, 3);

    public List<List<IBasicNodeModel>> Graph { get; set; }

    private bool finishPresent;
    private bool startPresent;


    private async Task LoadedPage()
    {
        await RenderGrid();
    }

    private async Task RenderGrid()
    {
        Graph = await _createGraph.GetAsync((int)Coord.X, (int)Coord.Y);
    }

    private async Task OnGridChange()
    {

    }

    private EventCallback Visualize()
    {
        return new EventCallback();
    }
}
